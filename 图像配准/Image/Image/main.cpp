#include "opencv2/highgui/highgui.hpp"
#include "opencv2/imgproc/imgproc.hpp"
#include "opencv2/opencv.hpp" 
#include <cv.h>  
#include <cxcore.h>  
#include <highgui.h>  
#include <iostream>
using namespace std;
using namespace cv;

vector<Point2f> imagePoints1, imagePoints2;
Mat ref_win, src_win;
int pcount = 0;
//event鼠标事件代号，x,y鼠标坐标，flags拖拽和键盘操作的代号  
void on_mouse1(int event, int x, int y, int flag, void *ustc)
{
	if (event==CV_EVENT_LBUTTONDOWN)//左键按下，读取初始坐标,并在图像该处打点
	{
		Point p = Point(x,y);
		circle(ref_win,p,1,Scalar(0,0,255),-1);
		imshow("基准图",ref_win);
		imagePoints1.push_back(p);//存放选中的点
		cout << "基准图:" << p << endl;
		pcount++;
		cout << "point num:" << pcount << endl;
	}
}
void on_mouse2(int event, int x, int y, int flags, void *ustc)
{
	if (event == CV_EVENT_LBUTTONDOWN)
	{
	Point p = Point(x, y);
	circle(src_win, p, 1, Scalar(0, 0, 255), -1);
	imshow("待配准图", src_win);
	imagePoints2.push_back(p);//存放选中的点
	cout << "待配准图:" << p << endl;
	}
}
int main()
{
	Mat ref = imread("1.png");
	Mat src = imread("2.png");
	ref_win = ref.clone();
	src_win = src.clone();

	namedWindow("待配准图");
	namedWindow("基准图");
	imshow("待配准图", src_win);
	imshow("基准图", ref_win);
	setMouseCallback("待配准图", on_mouse2);
	setMouseCallback("基准图", on_mouse1);
	
	waitKey();
	string str;
	printf("往下执行？\n");
	cin >> str;
	//求变换矩阵
	Mat homo = findHomography(imagePoints2, imagePoints1, CV_RANSAC);
	Mat imageTransform1;
	warpPerspective(src,imageTransform1,homo,Size(ref.cols,ref.rows));
	imshow("transform", imageTransform1);
	/*imshow("基准图打点", ref_win);
	imshow("待配准图打点", src_win);*/
	imshow("变换图", imageTransform1);
	waitKey();
	return 0;
	

}